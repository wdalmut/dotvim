snippet interface "PHP Interface"
namespace $1;

interface $2
{
    $3
}
endsnippet

snippet class "PHP Empty Class"
namespace $1;

class $2
{
    $3
}
endsnippet

snippet classe "PHP Empty Class Extends"
namespace $1;

class $2 extends $3
{
    $4
}
endsnippet

snippet testcase "PHP UnitTest Snippet"
namespace $1;

use PHPUnit\Framework\TestCase;

class $2Test extends TestCase
{
    $3
}
endsnippet

snippet setup "Add the setUp method"
public function setUp()
{
    $1
}
endsnippet

snippet test "Add a new test method"
public function test$1()
{
    $2
}
endsnippet

snippet trait "PHP Trait"
namespace $1;

trait $2
{
    $3
}
endsnippet

snippet zf2route "ZF2 route"
"$1" => array(
    "type" => "$2",
    "options" => array(
        "route" => "$3",
        'defaults' => array(
            'controller' => '$4',
            'action' => '$5',
        )
    ),
    'may_terminate' => $6
),
endsnippet

snippet pub "Public method"
public function $1($2)
{
    $3
}
endsnippet

snippet pri "Private method"
private function $1($2)
{
    $3
}
endsnippet

snippet pro "Protected method"
protected function $1($2)
{
    $3
}
endsnippet

snippet gs "PHP Class Getter Setter" !b
private $$1

public function get${1/(\w+)\s*;/\u$1/}()
{
    return $this->${1/(\w+)\s*;/$1/};$2
}

public function set${1/(\w+)\s*;/\u$1/}($${1/(\w+)\s*;/$1/})
{
    $this->${1/(\w+)\s*;/$1/} = $${1/(\w+)\s*;/$1/};$3
    ${4:return $this;}
}
$0
endsnippet

snippet getter "PHP Class Getter" !b
public function get${1/\w+\s*/\u$0/}()
{
    return $this->$1;$2
}
$0
endsnippet

snippet setter "PHP Class Setter" !b
public function set${1/\w+\s*/\u$0/}($$1)
{
    $this->$1 = $$1;$3
    ${4:return $this;}
}
$0
endsnippet
